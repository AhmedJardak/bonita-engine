<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd">

	<bean id="archivingStrategy" class="org.bonitasoft.engine.archive.impl.DefaultArchivingStrategy" />

	<bean id="synchroService" class="org.bonitasoft.engine.synchro.SynchroServiceImpl" >
		<constructor-arg name="initialCapacity" value="50" />
		<constructor-arg name="logger" ref="platformTechnicalLoggerService" />
		<constructor-arg name="cacheService" ref="platformCacheService" />
	</bean>

	<bean id="sessionProvider" class="org.bonitasoft.engine.session.impl.SessionProviderImpl">
	</bean>

	<bean id="sessionService" class="org.bonitasoft.engine.session.impl.SessionServiceImpl">
		<constructor-arg name="sessionProvider" ref="sessionProvider" />
		<constructor-arg name="applicationName" value="BPM" />
		<constructor-arg name="logger" ref="platformTechnicalLoggerService" />
		<!-- set Engine session duration (in ms) : -->
		<property name="sessionDuration" value="3600000" />
	</bean>

	<bean id="quartzProperties" class="org.springframework.beans.factory.config.PropertiesFactoryBean">
		<property name="properties">
			<props>
				<prop key="org.quartz.scheduler.skipUpdateCheck">${org.quartz.scheduler.skipUpdateCheck:true}</prop>
				<prop key="org.quartz.threadPool.class">org.quartz.simpl.SimpleThreadPool</prop>
				<prop key="org.quartz.threadPool.threadCount">5</prop>
				<prop key="org.quartz.jobStore.class">org.bonitasoft.engine.scheduler.impl.BonitaJobStoreCMT</prop>
				<prop key="org.quartz.jobStore.driverDelegateClass">${quartz.connection.jobstoredriver:org.quartz.impl.jdbcjobstore.StdJDBCDelegate}</prop>
				<prop key="org.quartz.jobStore.dataSource">managedDS</prop>
				<prop key="org.quartz.jobStore.useProperties">true</prop>
				<prop key="org.quartz.jobStore.nonManagedTXDataSource">notManagedDS</prop>
				<prop key="org.quartz.dataSource.managedDS.jndiURL">${database.journal.datasource.name}</prop>
				<prop key="org.quartz.dataSource.notManagedDS.jndiURL">${database.sequence.manager.datasource.name}</prop>
				<prop key="org.quartz.jobStore.dontSetAutoCommitFalse">true</prop>
				<prop key="org.quartz.scheduler.wrapJobExecutionInUserTransaction">true</prop>
				<prop key="org.quartz.scheduler.userTransactionURL">${userTransaction}</prop>
			</props>
		</property>
	</bean>

	<bean id="schedulerExecutor" class="org.bonitasoft.engine.scheduler.impl.QuartzSchedulerExecutor">
		<constructor-arg name="schedulerFactory" ref="quartzSchedulerFactory" />
		<constructor-arg name="logger" ref="platformTechnicalLoggerService" />
		<constructor-arg name="sessionAccessor" ref="sessionAccessor" />
		<constructor-arg name="transactionService" ref="transactionService" />
		<constructor-arg name="useOptimization" value="true" />
	</bean>

	<bean id="jobService" class="org.bonitasoft.engine.scheduler.impl.JobServiceImpl">
		<constructor-arg name="eventService" ref="eventService" />
		<constructor-arg name="recorder" ref="tenantRecorderSyncForPlatform" />
		<constructor-arg name="readPersistenceService" ref="persistenceService" />
		<constructor-arg name="logger" ref="platformTechnicalLoggerService" />
	</bean>

	<bean id="scheduler" class="org.bonitasoft.engine.scheduler.impl.SchedulerServiceImpl">
		<constructor-arg name="schedulerExecutor" ref="schedulerExecutor" />
		<constructor-arg name="jobService" ref="jobService" />
		<constructor-arg name="logger" ref="platformTechnicalLoggerService" />
		<constructor-arg name="eventService" ref="eventService" />
		<constructor-arg name="transactionService" ref="transactionService" />
		<constructor-arg name="sessionAccessor" ref="sessionAccessor" />
		<constructor-arg name="servicesResolver" ref="servicesResolver" />
		<constructor-arg name="batchSize" value="1000" />
	</bean>

	<bean id="servicesResolver" class="org.bonitasoft.engine.service.ProcessEngineServicesResolver" />

	<bean id="quartzSchedulerFactory" class="org.bonitasoft.engine.scheduler.impl.BonitaSchedulerFactory">
		<constructor-arg name="props" ref="quartzProperties"/>
		<constructor-arg name="logger" ref="platformTechnicalLoggerService" />
	</bean>

	<bean id="platformSessionProvider" class="org.bonitasoft.engine.platform.session.impl.PlatformSessionProviderImpl">
	</bean>

	<bean id="platformSessionService" class="org.bonitasoft.engine.platform.session.impl.PlatformSessionServiceImpl">
		<constructor-arg name="platformSessionProvider" ref="platformSessionProvider" />
		<constructor-arg name="logger" ref="platformTechnicalLoggerService" />
	</bean>

	<bean id="platformLoginService" class="org.bonitasoft.engine.core.platform.login.impl.PlatformLoginServiceImpl">
		<constructor-arg name="platformAuthenticationService" ref="platformAuthenticationService" />
		<constructor-arg name="platformSessionService" ref="platformSessionService" />
	</bean>

	<bean id="platformCommandService" class="org.bonitasoft.engine.platform.command.impl.PlatformCommandServiceImpl">
		<constructor-arg name="platformPersistenceService" ref="platformPersistenceService" />
		<constructor-arg name="logger" ref="platformTechnicalLoggerService" />
	</bean>

	<bean id="platformAuthenticationService" class="org.bonitasoft.engine.service.impl.PlatformAuthenticationChecker" />

	<bean id="platformService" class="org.bonitasoft.engine.platform.impl.PlatformServiceImpl">
		<constructor-arg ref="platformPersistenceService" />
		<constructor-arg name="tenantPersistenceServices">
			<list>
				<ref bean="persistenceService" />
			</list>
		</constructor-arg>
		<constructor-arg ref="platformTechnicalLoggerService" />
		<constructor-arg ref="platformCacheService" />
		<constructor-arg ref="platformProperties" />
		<constructor-arg name="recorder" ref="platformRecorderSync" />
		<constructor-arg name="datasource" ref="bonitaSequenceManagerDSJNDI" />
		<!-- read SQL files from within bonita-server.jar -->
		<constructor-arg name="sqlFolder" value="/sql/${db.vendor}" />
		<constructor-arg name="statementDelimiter" value="${sql.delimiter}" />
	</bean>

	<bean id="platformProperties" class="org.bonitasoft.engine.platform.model.impl.SPlatformPropertiesImpl" />

	<bean id="parameterService" class="org.bonitasoft.engine.parameter.propertyfile.PropertyFileParameterService">
		<constructor-arg name="sessionAccessor" ref="sessionAccessor" />
		<constructor-arg name="cacheService" ref="platformCacheService" />
	</bean>

	<bean id="parameterExpressionExecutorStrategy" class="org.bonitasoft.engine.expression.ParameterExpressionExecutorStrategy">
		<constructor-arg name="parameterService" ref="parameterService" />
	</bean>

	<bean id="nodeConfiguration" class="org.bonitasoft.engine.api.impl.NodeConfigurationImpl" autowire="byType">
		<property name="shouldStartScheduler" value="true" />
		<property name="shouldRestartElements" value="true" />
		<property name="TenantRestartHandlers">
			<list>
				<bean class="org.bonitasoft.engine.execution.work.RestartFlowNodesHandler" />
				<bean class="org.bonitasoft.engine.execution.work.RestartProcessHandler" />
				<bean class="org.bonitasoft.engine.execution.work.BPMEventWorksHandler" />
				<bean class="org.bonitasoft.engine.profile.ProfilesUpdaterRestartHandler" />
			</list>
		</property>
		<property name="restartHandlers">
			<list>
				<ref bean="schedulerServiceRestartHandler" />
			</list>
		</property>
		<property name="lifecycleServices">
			<list>
				<ref bean="classLoaderService" />
				<ref bean="platformCacheService" />
			</list>
		</property>
		<property name="jobListeners">
			<list>
				<ref bean="loggerJobListener" />
				<ref bean="jdbcJobListener" />
			</list>
		</property>
	</bean>

	<bean id="jobLogCreator" class="org.bonitasoft.engine.scheduler.impl.JobLogCreator">
		<constructor-arg name="jobService" ref="jobService" />
		<constructor-arg name="logger" ref="platformTechnicalLoggerService"/>
	</bean>

	<bean id="jdbcJobListener" class="org.bonitasoft.engine.scheduler.impl.JDBCJobListener">
		<constructor-arg name="schedulerService" ref="scheduler" />
		<constructor-arg name="schedulerExecutor" ref="schedulerExecutor" />
		<constructor-arg name="jobService" ref="jobService" />
		<constructor-arg name="sessionAccessor" ref="sessionAccessor" />
		<constructor-arg name="transactionService" ref="transactionService" />
		<constructor-arg name="incidentService" ref="incidentService" />
		<constructor-arg name="logger" ref="platformTechnicalLoggerService" />
		<constructor-arg name="jobLogCreator" ref="jobLogCreator"/>
	</bean>

	<bean id="loggerJobListener" class="org.bonitasoft.engine.scheduler.impl.TechnicalLoggerJobListener">
		<constructor-arg name="logger" ref="platformTechnicalLoggerService" />
	</bean>

	<bean id="schedulerServiceRestartHandler" class="org.bonitasoft.engine.handler.SchedulerServiceRestartHandler">
		<constructor-arg name="schedulerService" ref="scheduler" />
		<constructor-arg name="technicalLoggerService" ref="platformTechnicalLoggerService" />
	</bean>

	<bean id="platformTechnicalLoggerService" class="org.bonitasoft.engine.log.technical.TechnicalLoggerSLF4JImpl" />

	<bean id="lockService" class="org.bonitasoft.engine.lock.impl.MemoryLockService" scope="singleton">
		<constructor-arg name="logger" ref="platformTechnicalLoggerService" />
		<constructor-arg name="lockTimeout" value="60" />
		<constructor-arg name="lockPoolSize" value="100" />
	</bean>

	<bean id="incidentService" class="org.bonitasoft.engine.incident.IncidentServiceImpl">
		<constructor-arg name="handlers">
			<list>
				<bean class="org.bonitasoft.engine.incident.FileLoggerIncidentHandler">
					<constructor-arg name="logFilePath" value="${bonita.home}/server/tenants" />
				</bean>
			</list>
		</constructor-arg>
		<constructor-arg name="logger" ref="platformTechnicalLoggerService" />
	</bean>

	<!-- This is the base class that will allow to lookup the JNDI tree -->
	<bean id="jndiTemplate" class="org.springframework.jndi.JndiTemplate">
	</bean>

	<bean id="bonitaSequenceManagerDSJNDI" class="org.springframework.jndi.JndiObjectFactoryBean">
		<property name="jndiName" value="${database.sequence.manager.datasource.name}" />
	</bean>

	<bean id="platformDependencyService" class="org.bonitasoft.engine.dependency.impl.PlatformDependencyServiceImpl">
		<constructor-arg name="platformPersistenceService" ref="platformPersistenceService" />
		<constructor-arg name="classLoaderService" ref="classLoaderService" />
	</bean>

	<bean id="parentClassLoaderResolver" class="org.bonitasoft.engine.bpm.classloader.BonitaBPMParentClassLoaderResolver">
		<constructor-arg name="sessionAccessor" ref="sessionAccessor" />
	</bean>

	<bean id="classLoaderService" class="org.bonitasoft.engine.classloader.ClassLoaderServiceImpl">
		<constructor-arg name="parentClassLoaderResolver" ref="parentClassLoaderResolver" />
		<constructor-arg name="temporaryFolder" value="${bonita.home}/server/platform/tmp" />
		<constructor-arg name="logger" ref="platformTechnicalLoggerService" />
	</bean>

	<bean id="platformCacheService" class="org.bonitasoft.engine.cache.ehcache.PlatformEhCacheCacheService">
		<constructor-arg name="logger" ref="platformTechnicalLoggerService" />
		<constructor-arg name="sessionAccessor" ref="sessionAccessor" />
		<constructor-arg name="cacheConfigurations" ref="cacheConfigurations" />
		<constructor-arg name="defaultCacheConfiguration" ref="defaultPlatformCacheConfiguration" />
		<constructor-arg name="diskStorePath" value="java.io.tmpdir/platform.cache" />
	</bean>

	<bean id="defaultPlatformCacheConfiguration" class="org.bonitasoft.engine.cache.CacheConfiguration">
		<property name="name" value="DEFAULT_PLATFORM" />
		<property name="maxElementsInMemory" value="1000" />
		<property name="inMemoryOnly" value="true" />
		<property name="eternal" value="true" />
	</bean>

	<bean id="cacheConfigurations" class="org.bonitasoft.engine.cache.CacheConfigurations" autowire="byType" />

	<bean id="connectorCacheConfig" class="org.bonitasoft.engine.cache.CacheConfiguration">
		<property name="name" value="CONNECTOR" />
		<property name="readIntensive" value="true" />
	</bean>

	<bean id="processDefCacheConfig" class="org.bonitasoft.engine.cache.CacheConfiguration">
		<property name="name" value="_PROCESSDEF" />
	</bean>

	<bean id="userFilterCacheConfig" class="org.bonitasoft.engine.cache.CacheConfiguration">
		<property name="name" value="USER_FILTER" />
	</bean>

	<bean id="migrationPlanCacheConfig" class="org.bonitasoft.engine.cache.CacheConfiguration">
		<property name="name" value="MIGRATION_PLAN_CACHE_NAME" />
	</bean>

	<bean id="breakpointCacheConfig" class="org.bonitasoft.engine.cache.CacheConfiguration">
		<property name="name" value="BREAKPOINTS_BY_INSTANCE" />
	</bean>

	<bean id="groovyScriptCacheConfig" class="org.bonitasoft.engine.cache.CacheConfiguration">
		<property name="name" value="GROOVY_SCRIPT_CACHE_NAME" />
		<property name="maxElementsInMemory" value="10000" />
		<property name="inMemoryOnly" value="true" />
		<property name="eternal" value="true" />
	</bean>

	<bean id="synchroServiceCacheConfig" class="org.bonitasoft.engine.cache.CacheConfiguration">
		<property name="name" value="SYNCHRO_SERVICE_CACHE" />
		<property name="timeToLiveSeconds" value="120" />
		<property name="maxElementsInMemory" value="10000" />
		<property name="inMemoryOnly" value="true" />
	</bean>

	<bean id="transientDataCacheConfig" class="org.bonitasoft.engine.cache.CacheConfiguration">
		<property name="name" value="transient_data" />
		<property name="maxElementsInMemory" value="10000" />
		<property name="inMemoryOnly" value="true" />
		<property name="eternal" value="true" />
	</bean>

	<bean id="platformCacheConfig" class="org.bonitasoft.engine.cache.CacheConfiguration">
		<property name="name" value="PLATFORM" />
		<property name="maxElementsInMemory" value="100" />
		<property name="inMemoryOnly" value="true" />
		<property name="eternal" value="true" />
	</bean>

	<bean id="parameterCacheConfig" class="org.bonitasoft.engine.cache.CacheConfiguration">
		<property name="name" value="parameters" />
	</bean>

	<bean id="broadcastService" class="org.bonitasoft.engine.service.impl.BroadcastServiceLocal">
	</bean>



</beans>