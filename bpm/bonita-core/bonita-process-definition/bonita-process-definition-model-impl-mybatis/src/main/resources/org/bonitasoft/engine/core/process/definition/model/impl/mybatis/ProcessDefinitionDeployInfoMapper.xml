<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="org.bonitasoft.engine.core.process.definition.model.impl.SProcessDefinitionDeployInfoImpl">
    <cache/>
	<insert id="insertSProcessDefinitionDeployInfoImpl" parameterType="process_definition">
		INSERT INTO process_definition (tenantid, id, name, processId, version, description, deploymentDate, deployedBy, activationState,
			configurationState, migrationDate, displayName, displayDescription, lastUpdateDate, iconPath)
		VALUES (#{tenantid}, #{entity.id}, #{entity.name}, #{entity.processId}, #{entity.version}, #{entity.description},
			#{entity.deploymentDate}, #{entity.deployedBy}, #{entity.activationState}, #{entity.configurationState}, #{entity.migrationDate}, #{entity.displayName},
			#{entity.displayDescription}, #{entity.lastUpdateDate}, #{entity.iconPath})
	</insert>

	<update id="updateSProcessDefinitionDeployInfoImpl" parameterType="map">
		UPDATE process_definition
		<trim prefix="SET" suffixOverrides=",">
			<if test="activationState != null">activationState=#{activationState},</if>
			<if test="configurationState != null">configurationState=#{configurationState},</if>
			<if test="displayName != null">displayName=#{displayName},</if>
			<if test="description != null">description=#{description},</if>
			<if test="displayDescription == '___bonitanull___'">displayDescription=NULL,</if>
			<if test="displayDescription != null and displayDescription != '___bonitanull___'">displayDescription=#{displayDescription},</if>
			<if test="lastUpdateDate != null">lastUpdateDate=#{lastUpdateDate},</if>
			<if test="iconPath != null">iconPath=#{iconPath},</if>
		</trim>
		WHERE tenantid = #{tenantid}
		AND id = #{id}
	</update>

	<delete id="deleteSProcessDefinitionDeployInfoImpl" parameterType="process_definition">
		DELETE FROM process_definition
		WHERE tenantid = #{tenantid}
		AND id = #{id}
	</delete>

	<resultMap id="processDefinitionDeployInfoResultMap" type="process_definition">
		<result property="id" column="id" />
		<result property="name" column="name" />
		<result property="deploymentDate" column="deploymentDate" />
		<result property="deployedBy" column="deployedBy" />
		<result property="version" column="version" />
		<result property="description" column="description" />
		<result property="activationState" column="activationState" />
		<result property="configurationState" column="configurationState" />
		<result property="processId" column="processId" />
		<result property="migrationDate" column="migrationDate" />
		<result property="displayName" column="displayName" />
		<result property="displayDescription" column="displayDescription" />
		<result property="lastUpdateDate" column="lastUpdateDate" />
		<result property="iconPath" column="iconPath" />
	</resultMap>

	<select id="getProcessDefinitionById" parameterType="long" resultMap="processDefinitionDeployInfoResultMap">
		SELECT proc_def.*
		FROM process_definition proc_def
		WHERE proc_def.tenantid = #{tenantid}
		AND proc_def.id = #{id}
	</select>

	<select id="getDeployInfoByProcessDefId" parameterType="long" resultMap="processDefinitionDeployInfoResultMap">
		SELECT proc_def.*
		FROM process_definition proc_def
		WHERE proc_def.tenantid = #{tenantid}
		AND proc_def.processId = #{processId}
	</select>

	<select id="getProcessDefinitionDeployInfosByTimeDesc" parameterType="string" resultMap="processDefinitionDeployInfoResultMap">
		SELECT proc_def.*
		FROM process_definition proc_def
		WHERE proc_def.tenantid = #{tenantid}
		AND proc_def.name = #{name}
		ORDER BY proc_def.deploymentDate DESC
	</select>
	
	<select id="getProcessDefinitionIdByNameAndVersion" parameterType="list" resultType="long">
		SELECT proc_def.processId
		FROM process_definition proc_def
		WHERE proc_def.tenantid = #{tenantid}
		AND proc_def.name = #{name}
		AND proc_def.version = #{version}
	</select>
	
	<select id="getProcessDefinitionDeployInfos" parameterType="long" resultMap="processDefinitionDeployInfoResultMap">
		SELECT proc_def.*
		FROM process_definition proc_def
		WHERE proc_def.tenantid = #{tenantid}
		<if test="orderBy != null">
			ORDER BY ${orderBy}
		</if>
	</select>

	<select id="getNumberOfProcessDefinitionsInActivationState" parameterType="string" resultType="long">
		SELECT COUNT(*)
		FROM process_definition proc_def
		WHERE proc_def.tenantid = #{tenantid}
		AND proc_def.activationState = #{activationState}
	</select>

	<select id="getNumberOfProcessDefinitions" parameterType="long" resultType="long">
		SELECT COUNT(proc_def.id)
		FROM process_definition proc_def
		WHERE proc_def.tenantid = #{tenantid}
	</select>

	<select id="getProcessDefinitionsIds" parameterType="map" resultType="long">
		SELECT proc_def.processId
		FROM process_definition proc_def
		WHERE proc_def.tenantid = #{tenantid}
		<if test="orderBy != null">
			ORDER BY ${orderBy}
		</if>
	</select>

	<select id="getProcessDefinitionsIdsInActivationState" parameterType="map" resultType="long">
		SELECT proc_def.processId
		FROM process_definition proc_def
		WHERE proc_def.tenantid = #{tenantid}
		AND proc_def.activationState = #{activationState}
		<if test="orderBy != null">
			ORDER BY ${orderBy}
		</if>
	</select>

	<select id="getSubSetOfProcessDefinitionDeployInfos" parameterType="list" resultMap="processDefinitionDeployInfoResultMap">
		SELECT proc_def.*
		FROM process_definition proc_def
		WHERE proc_def.tenantid = #{tenantid}
		AND proc_def.processId IN
		<foreach item="processId" index="index" collection="processIds" open="(" separator="," close=")">
			#{processId}
		</foreach>
		<if test="orderBy != null">
			ORDER BY ${orderBy}
		</if>
	</select>
	
	<select id="getNumberOfSProcessDefinitionDeployInfoStartedBy" resultType="long">
		SELECT COUNT(*)
		FROM process_definition proc_def
		WHERE proc_def.tenantid = #{tenantid}
		AND proc_def.activationState = 'enabled'
		AND (proc_def.processId IN (
			SELECT p.processDefinitionId
			 FROM process_instance p
			 WHERE p.tenantid = proc_def.tenantid
			 AND p.startedBy = #{startedBy}
			)
			OR proc_def.processId IN (
			SELECT ap.processDefinitionId
			 FROM arch_process_instance ap
			 WHERE ap.tenantid = proc_def.tenantid
			 AND ap.startedBy = #{startedBy}
			)
		)
		<if test="filter != null">
			AND ${filter}
		</if>
	</select>
	
	<select id="searchSProcessDefinitionDeployInfoStartedBy" resultMap="processDefinitionDeployInfoResultMap">
		SELECT *
		FROM process_definition proc_def
		WHERE proc_def.tenantid = #{tenantid}
		AND proc_def.activationState = 'enabled'
		AND (proc_def.processId IN (
			SELECT p.processDefinitionId
			 FROM process_instance p
			 WHERE p.tenantid = proc_def.tenantid
			 AND p.startedBy = #{startedBy}
			)
			OR proc_def.processId IN (
			SELECT ap.processDefinitionId
			 FROM arch_process_instance ap
			 WHERE ap.tenantid = proc_def.tenantid
			 AND ap.startedBy = #{startedBy}
			)
		)
		<if test="filter != null">
			AND ${filter}
		</if>
		<if test="orderBy != null">
			ORDER BY ${orderBy}
   		</if>
	</select>
	
	<select id="getNumberOfSProcessDefinitionDeployInfo" resultType="long">
		SELECT COUNT(*)
		FROM process_definition proc_def
		WHERE proc_def.tenantid = #{tenantid} 
		<if test="filter != null">
			AND ${filter}
		</if>
	</select>
	
	<select id="searchSProcessDefinitionDeployInfo" resultMap="processDefinitionDeployInfoResultMap">
		SELECT *
		FROM process_definition proc_def
		WHERE proc_def.tenantid = #{tenantid} 
		<if test="filter != null">
			AND ${filter}
		</if>
		<if test="orderBy != null">
			ORDER BY ${orderBy}
   		</if>
	</select>
	            
	<select id="getNumberOfSProcessDefinitionDeployInfoUncategorized" resultType="long">
		SELECT COUNT(*)
		FROM process_definition proc_def
		WHERE proc_def.tenantid = #{tenantid}
		AND NOT EXISTS (
			SELECT pcm.id
			FROM processcategorymapping pcm
			WHERE pcm.tenantid = proc_def.tenantid
			AND pcm.processId = proc_def.processId
		)
		<if test="filter != null">
			AND ${filter}
		</if>		                  
	</select>

	<select id="searchSProcessDefinitionDeployInfoUncategorized" resultMap="processDefinitionDeployInfoResultMap">
		SELECT *
		FROM process_definition proc_def
		WHERE proc_def.tenantid = #{tenantid}
		AND NOT EXISTS (
			SELECT pcm.id
			FROM processcategorymapping pcm
			WHERE pcm.tenantid = proc_def.tenantid
			AND pcm.processId = proc_def.processId
		)
		<if test="filter != null">
			AND ${filter}
		</if>
		<if test="orderBy != null">
			ORDER BY ${orderBy}
   		</if>		                  
	</select>
		
	<select id="getNumberOfSProcessDefinitionDeployInfoUncategorizedAndWithSupervisor" resultType="long">
		SELECT COUNT(*)
		FROM process_definition proc_def
		WHERE proc_def.tenantid = #{tenantid}		
		AND NOT EXISTS (
			SELECT * 
			FROM processcategorymapping pcm
			WHERE  pcm.processId = proc_def.processId
			AND pcm.tenantid = proc_def.tenantid
		)
		AND proc_def.processId IN (
			SELECT ps.processDefId
			FROM processsupervisor ps
			WHERE ps.tenantid = proc_def.tenantid 
			AND(
				ps.userId = #{userId}
				OR (
					ps.id IN (
						SELECT s.id
						FROM processsupervisor s,
						 	user_membership um
						WHERE um.userId = #{userId} 
						AND s.tenantid = proc_def.tenantid
						AND um.tenantid = proc_def.tenantid
						AND (
							(s.groupId = um.groupId AND s.roleId &lt;= 0)
							OR (s.roleId = um.roleId AND s.groupId &lt;= 0)
							OR (s.groupId = um.groupId AND s.roleId = um.roleId)
						)
					)
				)
			)
		)
		<if test="filter != null">
			AND ${filter}
		</if>		                  
	</select>

	<select id="searchSProcessDefinitionDeployInfoUncategorizedAndWithSupervisor" resultMap="processDefinitionDeployInfoResultMap">
		SELECT *
		FROM process_definition proc_def
		WHERE proc_def.tenantid = #{tenantid}
		AND NOT EXISTS (
			SELECT * 
			FROM processcategorymapping pcm
			WHERE  pcm.processId = proc_def.processId
			AND pcm.tenantid = proc_def.tenantid
		)		
		AND proc_def.processId IN (
			SELECT ps.processDefId
			FROM processsupervisor ps
			WHERE ps.tenantid = proc_def.tenantid
			AND(
				ps.userId = #{userId}
				OR (
					ps.id IN (
						SELECT s.id
						FROM processsupervisor s,
						 	user_membership um
						WHERE um.userId = #{userId} 
						AND s.tenantid = proc_def.tenantid
						AND um.tenantid = proc_def.tenantid
						AND (
							(s.groupId = um.groupId AND s.roleId &lt;= 0)
							OR (s.roleId = um.roleId AND s.groupId &lt;= 0)
							OR (s.groupId = um.groupId AND s.roleId = um.roleId)
						)
					)
				)
			)
		)
		<if test="filter != null">
			AND ${filter}
		</if>
		<if test="orderBy != null">
			ORDER BY ${orderBy}
   		</if>		                  
	</select>

	<select id="getNumberOfSProcessDefinitionDeployInfoUserCanStart" resultType="long">
		SELECT COUNT(*)
		FROM process_definition proc_def
		WHERE proc_def.tenantid = #{tenantid} 
		AND proc_def.activationState = 'enabled'
		AND proc_def.processId IN (
			SELECT a.scopeId
			FROM actor a
			WHERE a.tenantid = proc_def.tenantid
			AND a.initiator = TRUE 
			AND a.id IN (
				SELECT actor.id
				FROM actor,
					 actormember
				WHERE actor.tenantid = proc_def.tenantid
				AND actormember.tenantid = actor.tenantid
				AND actor.id = actormember.actorId 
				AND (
					actormember.userId = #{userId}
					OR actormember.id IN (
						SELECT am.id
						FROM actormember am,
							 user_membership um
						WHERE um.userId = #{userId} 
						AND am.tenantid = proc_def.tenantid
						AND um.tenantid = am.tenantid
						AND (
							(am.groupId = um.groupId AND am.roleId &lt;= 0)
							OR (am.roleId = um.roleId AND am.groupId &lt;= 0)
							OR (am.groupId = um.groupId AND am.roleId = um.roleId)
						)
					)
				)
			)
		)
		<if test="filter != null">
			AND ${filter}
		</if>
	</select>

	<select id="searchSProcessDefinitionDeployInfoUserCanStart"  resultMap="processDefinitionDeployInfoResultMap">
		SELECT *
		FROM process_definition proc_def
		WHERE proc_def.tenantid = #{tenantid} 
		AND proc_def.activationState = 'enabled'
		AND proc_def.processId IN (
			SELECT a.scopeId
			FROM actor a
			WHERE a.tenantid = proc_def.tenantid
			AND a.initiator = TRUE 
			AND a.id IN (
				SELECT actor.id
				FROM actor,
					 actormember
				WHERE actor.tenantid = proc_def.tenantid
				AND actormember.tenantid = actor.tenantid
				AND actor.id = actormember.actorId 
				AND (
					actormember.userId = #{userId}
					OR actormember.id IN (
						SELECT am.id
						FROM actormember am,
							 user_membership um
						WHERE am.tenantid = proc_def.tenantid
						AND um.tenantid = am.tenantid
						AND um.userId = #{userId} 
						AND (
							(am.groupId = um.groupId AND am.roleId &lt;= 0)
							OR (am.roleId = um.roleId AND am.groupId &lt;= 0)
							OR (am.groupId = um.groupId AND am.roleId = um.roleId)
						)
					)
				)
			)
		)
		<if test="filter != null">
			AND ${filter}
		</if>
		<if test="orderBy != null">
			ORDER BY ${orderBy}
   		</if>
	</select>

	<select id="getNumberOfSProcessDefinitionDeployInfoUncategorizedUserCanStart" resultType="long">
		SELECT COUNT(*)
		FROM process_definition proc_def
		INNER JOIN actor a ON a.scopeId = proc_def.processId
            AND a.tenantid = proc_def.tenantid
			AND a.initiator = TRUE
		INNER JOIN actormember am ON am.actorId = a.id
			AND am.tenantid = a.tenantid
			AND (am.userId = #{userId}
				OR am.id IN (
						SELECT am2.id
						FROM actormember am2,
							 user_membership um
						WHERE am2.tenantid = proc_def.tenantid
						AND um.tenantid = am2.tenantid
						AND um.userId = #{userId}
						AND (
							(am2.groupId = um.groupId AND am2.roleId &lt;= 0)
							OR (am2.roleId = um.roleId AND am2.groupId &lt;= 0)
							OR (am2.groupId = um.groupId AND am2.roleId = um.roleId)
						)
					)
				)
		WHERE proc_def.activationState = 'enabled'
		AND NOT EXISTS (
			SELECT pcm.id
			FROM processcategorymapping pcm
			WHERE pcm.tenantid = proc_def.tenantid
			AND pcm.processId = proc_def.processId
		)
		<if test="filter != null">
			AND ${filter}
		</if>
	</select>

	<select id="searchSProcessDefinitionDeployInfoUncategorizedUserCanStart"  resultMap="processDefinitionDeployInfoResultMap">
		SELECT proc_def.*
		FROM process_definition proc_def
		INNER JOIN actor a ON a.scopeId = proc_def.processId
            AND a.tenantid = proc_def.tenantid
			AND a.initiator = TRUE
		INNER JOIN actormember am ON am.actorId = a.id
			AND am.tenantid = a.tenantid
			AND (am.userId = #{userId}
				OR am.id IN (
						SELECT am2.id
						FROM actormember am2,
							 user_membership um
						WHERE am2.tenantid = proc_def.tenantid
						AND um.tenantid = am2.tenantid
						AND um.userId = #{userId}
						AND (
							(am2.groupId = um.groupId AND am2.roleId &lt;= 0)
							OR (am2.roleId = um.roleId AND am2.groupId &lt;= 0)
							OR (am2.groupId = um.groupId AND am2.roleId = um.roleId)
						)
					)
				)
		WHERE proc_def.activationState = 'enabled'
		AND NOT EXISTS (
			SELECT pcm.id
			FROM processcategorymapping pcm
			WHERE pcm.tenantid = proc_def.tenantid
			AND pcm.processId = proc_def.processId
		)
		<if test="filter != null">
			AND ${filter}
		</if>
		<if test="orderBy != null">
			ORDER BY ${orderBy}
   		</if>
	</select>

	<select id="getNumberOfSProcessDefinitionDeployInfowithSProcessCategoryMappingUserCanStart" resultType="long">
		SELECT COUNT(proc_def.id)
		FROM process_definition proc_def,
			 processcategorymapping pcm
		WHERE proc_def.tenantid = #{tenantid}
		AND pcm.tenantid = proc_def.tenantid
		AND proc_def.activationState = 'enabled'
		AND proc_def.processId = pcm.processId
		AND proc_def.processId IN (
			SELECT actor.scopeId
			FROM actor
			WHERE actor.tenantid = proc_def.tenantid
			AND actor.initiator = TRUE 
			AND actor.id IN (
				SELECT actor.id
				FROM actor,
					 actormember
				WHERE actor.tenantid = proc_def.tenantid
				AND actormember.tenantid = actor.tenantid
				AND actor.id = actormember.actorId 
				AND (
					actormember.userId = #{userId}
					OR actormember.id IN (
						SELECT actormember.id
						FROM actormember am,
							 user_membership um
						WHERE am.tenantid = proc_def.tenantid
						AND um.tenantid = am.tenantid
						AND um.userId = #{userId} 
						AND (
							(am.groupId = um.groupId AND am.roleId &lt;= 0)
							OR (am.roleId = um.roleId AND am.groupId &lt;= 0)
							OR (am.groupId = um.groupId AND am.roleId = um.roleId)
						)
					)
				)
			)
		)
		<if test="filter != null">
			AND ${filter}
		</if>
	</select>

	<select id="searchSProcessDefinitionDeployInfowithSProcessCategoryMappingUserCanStart"  resultMap="processDefinitionDeployInfoResultMap">
		SELECT proc_def.*
		FROM process_definition proc_def,
			 processcategorymapping pcm
		WHERE proc_def.tenantid = #{tenantid}
		AND pcm.tenantid = proc_def.tenantid
		AND proc_def.activationState = 'enabled'
		AND proc_def.processId = pcm.processId
		AND proc_def.processId IN (
			SELECT actor.scopeId
			FROM actor
			WHERE actor.tenantid = proc_def.tenantid
			AND actor.initiator = TRUE 
			AND actor.id IN (
				SELECT actor.id
				FROM actor,
					 actormember
				WHERE actor.tenantid = proc_def.tenantid
				AND actormember.tenantid = actor.tenantid
				AND actor.id = actormember.actorId 
				AND (
					actormember.userId = #{userId}
					OR actormember.id IN (
						SELECT actormember.id
						FROM actormember am,
							 user_membership um
						WHERE am.tenantid = proc_def.tenantid
						AND um.tenantid = am.tenantid
						AND um.userId = #{userId} 
						AND (
							(am.groupId = um.groupId AND am.roleId &lt;= 0)
							OR (am.roleId = um.roleId AND am.groupId &lt;= 0)
							OR (am.groupId = um.groupId AND am.roleId = um.roleId)
						)
					)
				)
			)
		)
		<if test="filter != null">
			AND ${filter}
		</if>
		<if test="orderBy != null">
			ORDER BY ${orderBy}
   		</if>
	</select>

	<select id="getNumberOfSProcessDefinitionDeployInfowithSProcessCategoryMappingUserSupervised" resultType="long">
		SELECT COUNT(proc_def.id)
		FROM process_definition proc_def,
			 processcategorymapping pcm
		WHERE proc_def.tenantid = #{tenantid}
		AND pcm.tenantid = proc_def.tenantid
		AND proc_def.processId = pcm.processId 
		AND proc_def.processId IN (
			SELECT ps.processDefId
			FROM processsupervisor ps
			WHERE ps.tenantid = proc_def.tenantid
			AND (
				ps.userId = #{userId}
				OR (
					ps.id IN (
						SELECT s.id
						FROM processsupervisor s,
							 user_membership um
						WHERE s.tenantid = proc_def.tenantid
						AND um.tenantid = s.tenantid
						AND um.userId = #{userId} 
						AND (
							(s.groupId = um.groupId AND s.roleId &lt;= 0)
							OR (s.roleId = um.roleId AND s.groupId &lt;= 0)
							OR (s.groupId = um.groupId AND s.roleId = um.roleId)
						)
					)
				)
			)
		)
		<if test="filter != null">
			AND ${filter}
		</if>
	</select>

	<select id="searchSProcessDefinitionDeployInfowithSProcessCategoryMappingUserSupervised"  resultMap="processDefinitionDeployInfoResultMap">
		SELECT proc_def.*
		FROM process_definition proc_def,
			 processcategorymapping pcm
		WHERE proc_def.tenantid = #{tenantid}
		AND pcm.tenantid = proc_def.tenantid
		AND proc_def.processId = pcm.processId 
		AND proc_def.processId IN (
			SELECT ps.processDefId
			FROM processsupervisor ps
			WHERE ps.tenantid = proc_def.tenantid
			AND (
				ps.userId = #{userId}
				OR (
					ps.id IN (
						SELECT s.id
						FROM processsupervisor s,
							 user_membership um
						WHERE s.tenantid = proc_def.tenantid
						AND um.tenantid = s.tenantid
						AND um.userId = #{userId} 
						AND (
							(s.groupId = um.groupId AND s.roleId &lt;= 0)
							OR (s.roleId = um.roleId AND s.groupId &lt;= 0)
							OR (s.groupId = um.groupId AND s.roleId = um.roleId)
						)
					)
				)
			)
		)
		<if test="filter != null">
			AND ${filter}
		</if>
		<if test="orderBy != null">
			ORDER BY ${orderBy}
   		</if>
	</select>

	<select id="getNumberOfSProcessDefinitionDeployInfoUserSupervised" resultType="long">
		SELECT COUNT(proc_def.id)
		FROM process_definition proc_def
		WHERE proc_def.tenantid = #{tenantid}
		AND proc_def.processId IN (
			SELECT ps.processDefId
			FROM processsupervisor ps
			WHERE ps.tenantid = proc_def.tenantid
			AND (
				ps.userId = #{userId}
				OR (
					ps.id IN (
						SELECT s.id
						FROM processsupervisor s,
							 user_membership um
						WHERE s.tenantid = proc_def.tenantid
						AND um.tenantid = s.tenantid
						AND um.userId = #{userId} 
						AND (
							(s.groupId = um.groupId AND s.roleId &lt;= 0)
							OR (s.roleId = um.roleId AND s.groupId &lt;= 0)
							OR (s.groupId = um.groupId AND s.roleId = um.roleId)
						)
					)
				)
			)
		)
		<if test="filter != null">
			AND ${filter}
		</if>
	</select>

	<select id="searchSProcessDefinitionDeployInfoUserSupervised"  resultMap="processDefinitionDeployInfoResultMap">
		SELECT proc_def.*
		FROM process_definition proc_def
		WHERE proc_def.tenantid = #{tenantid}
		AND proc_def.processId IN (
			SELECT ps.processDefId
			FROM processsupervisor ps
			WHERE ps.tenantid = proc_def.tenantid
			AND (
				ps.userId = #{userId}
				OR (
					ps.id IN (
						SELECT s.id
						FROM processsupervisor s,
							 user_membership um
						WHERE s.tenantid = proc_def.tenantid
						AND um.tenantid = s.tenantid
						AND um.userId = #{userId} 
						AND (
							(s.groupId = um.groupId AND s.roleId &lt;= 0)
							OR (s.roleId = um.roleId AND s.groupId &lt;= 0)
							OR (s.groupId = um.groupId AND s.roleId = um.roleId)
						)
					)
				)
			)
		)
		<if test="filter != null">
			AND ${filter}
		</if>
		<if test="orderBy != null">
			ORDER BY ${orderBy}
   		</if>
	</select>

	<select id="getNumberOfSProcessDefinitionDeployInfowithSProcessCategoryMapping" resultType="long">
		SELECT COUNT(proc_def.id)
		FROM process_definition proc_def,
			 processcategorymapping pcm
		WHERE proc_def.tenantid = #{tenantid}
		AND pcm.tenantid = proc_def.tenantid
		AND proc_def.processId = pcm.processId
		<if test="filter != null">
			AND ${filter}
		</if>
	</select>

	<select id="searchSProcessDefinitionDeployInfowithSProcessCategoryMapping" resultMap="processDefinitionDeployInfoResultMap">
		SELECT proc_def.*
		FROM process_definition proc_def,
			 processcategorymapping pcm
		WHERE proc_def.tenantid = #{tenantid}
		AND pcm.tenantid = proc_def.tenantid
		AND proc_def.processId = pcm.processId
		<if test="filter != null">
			AND ${filter}
		</if>
		<if test="orderBy != null">
			ORDER BY ${orderBy}
   		</if>
	</select> 

	<select id="getProcessDeploymentInfoFromProcessInstanceIds" parameterType="list" resultType="map">
		SELECT proc_def.id AS "id", proc_def.processId AS "processId", proc_def.name AS "name", proc_def.version AS "version",
			proc_def.description AS "description", proc_def.deploymentDate AS "deploymentDate", proc_def.deployedBy AS "deployedBy",
			proc_def.activationState AS "activationState", proc_def.configurationState AS "configurationState", proc_def.displayName AS "displayName", proc_def.lastUpdateDate AS "lastUpdateDate",
			proc_def.iconPath AS "iconPath", proc_def.displayDescription AS "displayDescription", process_instance.id AS "processInstanceId"
		FROM process_definition proc_def,
			 process_instance
		WHERE proc_def.tenantid = #{tenantid}
		AND proc_def.tenantid = process_instance.tenantid
		AND proc_def.processid = process_instance.processdefinitionid
		AND process_instance.id IN
		<foreach item="processInstanceId" index="index" collection="processInstanceIds" open="(" separator="," close=")">
			#{processInstanceId}
		</foreach>
	</select>
	
	<select id="getProcessDeploymentInfoFromArchivedProcessInstanceIds" parameterType="list" resultType="map">
		SELECT proc_def.id AS "id", proc_def.processId AS "processId", proc_def.name AS "name", proc_def.version AS "version",
			proc_def.description AS "description", proc_def.deploymentDate AS "deploymentDate", proc_def.deployedBy AS "deployedBy",
			proc_def.activationState AS "activationState", proc_def.configurationState AS "configurationState", proc_def.displayName AS "displayName", proc_def.lastUpdateDate AS "lastUpdateDate",
			proc_def.iconPath AS "iconPath", proc_def.displayDescription AS "displayDescription", arch_process_instance.id AS "archivedProcessInstanceId"
		FROM process_definition proc_def,
			 arch_process_instance
		WHERE proc_def.tenantid = #{tenantid}
		AND proc_def.tenantid = arch_process_instance.tenantid
		AND proc_def.processid = arch_process_instance.processdefinitionid
		AND arch_process_instance.id IN
		<foreach item="archivedProcessInstanceId" index="index" collection="archivedProcessInstanceIds" open="(" separator="," close=")">
			#{archivedProcessInstanceId}
		</foreach>
	</select>

</mapper>