<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="org.bonitasoft.engine.core.process.instance.model.event.handling.impl.SWaitingEventImpl">

	<insert id="insertSWaitingEventImpl" parameterType="waiting_event">
		INSERT INTO waiting_event (tenantid, id, kind, eventType
		<if test="kind == 'message'">
			,messageName, locked, correlation1, correlation2, correlation3, correlation4, correlation5
		</if>
		<if test="kind == 'signal'">
			,signalName
		</if>
		<if test="kind == 'error'">
			,errorCode, relatedActivityInstanceId
		</if>
			, processName, flowNodeName, processDefinitionId, rootProcessInstanceId, parentProcessInstanceId, flowNodeInstanceId, active)
		VALUES (#{tenantid}, #{entity.id}, #{kind}, #{entity.eventType}
		<if test="kind == 'message'">
			, #{entity.messageName}, #{entity.locked}, #{entity.correlation1}, #{entity.correlation2}, #{entity.correlation3}, #{entity.correlation4}, #{entity.correlation5}
		</if>
		<if test="kind == 'signal'">
			, #{entity.signalName}
		</if>
		<if test="kind == 'error'">
			, #{entity.errorCode}, #{entity.relatedActivityInstanceId}
		</if>
			, #{entity.processName}, #{entity.flowNodeName}, #{entity.processDefinitionId}, #{entity.rootProcessInstanceId}, #{entity.parentProcessInstanceId}, #{entity.flowNodeInstanceId},
			#{entity.active})
	</insert>

	<update id="updateSWaitingEventImpl" parameterType="map">
		UPDATE waiting_event
		<trim prefix="SET" suffixOverrides=",">
			<if test="locked != null">locked=#{locked},</if>
			<if test="active != null">active=#{active},</if>
		</trim>
		WHERE tenantid = #{tenantid}
		AND id = #{id}
	</update>

	<delete id="deleteSWaitingEventImpl" parameterType="waiting_event">
		DELETE FROM waiting_event
		WHERE tenantid = #{tenantid}
		AND id = #{id}
	</delete>

	<resultMap id="WaitingEventResultMap" type="waiting_event">
		<result property="id" column="id" />
		<result property="eventType" column="eventType" />
		<result property="processName" column="processName" />
		<result property="processDefinitionId" column="processDefinitionId" />
		<result property="flowNodeName" column="flowNodeName" />
		<result property="rootProcessInstanceId" column="rootProcessInstanceId" />
		<result property="parentProcessInstanceId" column="parentProcessInstanceId" />
		<result property="flowNodeInstanceId" column="flowNodeInstanceId" />
		<result property="active" column="active" />
		<discriminator javaType="string" column="kind">
			<case value="message" resultType="waiting_message_event">
				<result property="messageName" column="messageName" />
				<result property="locked" column="locked" />
				<result property="correlation1" column="correlation1" />
				<result property="correlation2" column="correlation2" />
				<result property="correlation3" column="correlation3" />
				<result property="correlation4" column="correlation4" />
				<result property="correlation5" column="correlation5" />
			</case>
			<case value="signal" resultType="waiting_signal_event">
				<result property="signalName" column="signalName" />
			</case>
			<case value="error" resultType="waiting_error_event">
				<result property="errorCode" column="errorCode" />
				<result property="relatedActivityInstanceId" column="relatedActivityInstanceId" />
			</case>
		</discriminator>
	</resultMap>

	<select id="getCaughtMessagesByNameAndSource" parameterType="List" resultMap="WaitingEventResultMap">
		SELECT w.*
		FROM waiting_event w
		WHERE w.tenantid = #{tenantid}
		AND w.messageName = #{messageName}
		AND w.processName = #{processName}
		AND w.flowNodeName = #{flowNodeName}
		AND w.kind = 'message'
		<if test="orderBy != null">
			ORDER BY ${orderBy}
		</if>
	</select>

	<select id="getWaitingMessageEventById" parameterType="List" resultMap="WaitingEventResultMap">
		SELECT w.*
		FROM waiting_event w
		WHERE w.tenantid = #{tenantid}
		AND w.id = #{id}
		AND w.kind = 'message'
	</select>
	
	<select id="getCaughtErrorByRelatedActivityAndErrorCode" parameterType="List" resultMap="WaitingEventResultMap">
		SELECT w.*
		FROM  waiting_event w
		WHERE w.tenantid = #{tenantid}
		AND w.relatedActivityInstanceId = #{relatedActivityInstanceId}
		AND w.errorCode = #{errorCode}
	</select>

	<select id="getStartWaitingEvents" parameterType="List" resultMap="WaitingEventResultMap">
		SELECT w.*
		FROM waiting_event w
		WHERE w.tenantid = #{tenantid}
		AND w.processDefinitionId = #{processDefinitionId}
		AND w.eventType = 'START_EVENT'
		<if test="orderBy != null">
			ORDER BY ${orderBy}
		</if>
	</select>

	<select id="getListeningSignals" parameterType="List" resultMap="WaitingEventResultMap">
		SELECT w.*
		FROM waiting_event w
		WHERE w.tenantid = #{tenantid}
		AND w.signalName = #{signalName}
		<if test="orderBy != null">
			ORDER BY ${orderBy}
		</if>
	</select>
	
	<select id="getNumberOfSWaitingEvent" parameterType="list" resultType="long">
		SELECT COUNT(w.id)
		FROM  waiting_event w
		WHERE w.tenantid = #{tenantid}
		<if test="filter != null">
			AND ${filter}
		</if>
	</select>

	<select id="searchSWaitingEvent" parameterType="list" resultMap="WaitingEventResultMap">
		SELECT *
		FROM  waiting_event w
		WHERE w.tenantid = #{tenantid}
		<if test="filter != null">
			AND ${filter}
		</if>
		<if test="orderBy != null">
			ORDER BY ${orderBy}
		</if>
	</select>
	
	<select id="getNumberOfSWaitingSignalEvent" parameterType="list" resultType="long">
		SELECT COUNT(w.id)
		FROM  waiting_event w
		WHERE w.tenantid = #{tenantid}
		AND w.kind = 'signal'
		<if test="filter != null">
			AND ${filter}
		</if>
	</select>

	<select id="searchSWaitingSignalEvent" parameterType="list" resultMap="WaitingEventResultMap">
		SELECT *
		FROM  waiting_event w
		WHERE w.tenantid = #{tenantid}
		AND w.kind = 'signal'
		<if test="filter != null">
			AND ${filter}
		</if>
		<if test="orderBy != null">
			ORDER BY ${orderBy}
		</if>
	</select>
	
	<select id="getNumberOfSWaitingMessageEvent" parameterType="list" resultType="long">
		SELECT COUNT(w.id)
		FROM  waiting_event w
		WHERE w.tenantid = #{tenantid}
		AND w.kind = 'message'
		<if test="filter != null">
			AND ${filter}
		</if>
	</select>

	<select id="searchSWaitingMessageEvent" parameterType="list" resultMap="WaitingEventResultMap">
		SELECT *
		FROM  waiting_event w
		WHERE w.tenantid = #{tenantid}
		AND w.kind = 'message'
		<if test="filter != null">
			AND ${filter}
		</if>
		<if test="orderBy != null">
			ORDER BY ${orderBy}
		</if>
	</select>
	
	<select id="getNumberOfSWaitingErrorEvent" parameterType="list" resultType="long">
		SELECT COUNT(w.id)
		FROM  waiting_event w
		WHERE w.tenantid = #{tenantid}
		AND w.kind = 'error'
		<if test="filter != null">
			AND ${filter}
		</if>
	</select>

	<select id="searchSWaitingErrorEvent" parameterType="list" resultMap="WaitingEventResultMap">
		SELECT *
		FROM  waiting_event w
		WHERE w.tenantid = #{tenantid}
		AND w.kind = 'error'
		<if test="filter != null">
			AND ${filter}
		</if>
		<if test="orderBy != null">
			ORDER BY ${orderBy}
		</if>
	</select>
	
</mapper>