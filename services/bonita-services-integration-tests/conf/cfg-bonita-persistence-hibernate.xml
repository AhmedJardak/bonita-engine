<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd">

	<bean id="hbm-bonita-persistence-hibernate" class="org.bonitasoft.engine.persistence.HibernateResourcesProvider">
		<property name="resources">
			<set>
				<value>org/bonitasoft/engine/persistence/hibernate/sequence.hbm.xml
				</value>
				<value>org/bonitasoft/engine/persistence/hibernate/sequence.queries.hbm.xml
				</value>
			</set>
		</property>
	</bean>

	<bean id="platformPersistenceService" class="org.bonitasoft.engine.persistence.PlatformHibernatePersistenceService" depends-on="dbProperties">
		<constructor-arg name="name" value="platform" />
		<constructor-arg ref="transactionService" />
		<constructor-arg ref="journalConfigurationProvider" />
		<constructor-arg name="rangeSize" value="100" />
		<constructor-arg name="rangeSizes">
            <map>
            </map>
		</constructor-arg>
		<constructor-arg ref="dbConfigurationsProvider" />
		<constructor-arg name="statementDelimiter" value="${sql.delimiter}" />
        <constructor-arg name="logger" ref="technicalLoggerService" />
    </bean>

	<bean id="persistenceService" class="org.bonitasoft.engine.persistence.TenantHibernatePersistenceService" depends-on="dbProperties">
		<constructor-arg name="name" value="journal" />
		<constructor-arg ref="transactionService" />
		<constructor-arg ref="sessionAccessor" />
		<constructor-arg ref="journalConfigurationProvider" />
		<constructor-arg name="rangeSize" value="100" />
        <constructor-arg name="rangeSizes">
            <map>
                <entry key="org.bonitasoft.engine.queriablelogger.model.impl.SQueriableLogImpl" value="10000"/>
                <entry key="org.bonitasoft.engine.queriablelogger.model.impl.SQueriableLogParameterImpl" value="200000"/>
            </map>
        </constructor-arg>
		<constructor-arg ref="dbConfigurationsProvider" />
		<constructor-arg name="statementDelimiter" value="${sql.delimiter}" />
        <constructor-arg name="logger" ref="technicalLoggerService" />
    </bean>

	<bean id="journalConfigurationProvider" class="com.bonitasoft.engine.persistence.HibernateConfigurationProviderExt">
		<constructor-arg name="properties">
			<props>
				<prop key="hibernate.dialect">${hibernate.journal.dialect}</prop>
				<prop key="hibernate.connection.driver_class">${database.journal.connection.driver_class}</prop>
				<prop key="hibernate.connection.url">${database.journal.connection.url}</prop>
				<prop key="hibernate.connection.username">${database.journal.connection.username}</prop>
				<prop key="hibernate.connection.password">${database.journal.connection.password}</prop>
				<prop key="hibernate.connection.pool_size">${hibernate.connection.pool_size:20}</prop>
				<prop key="hibernate.cache.use_second_level_cache">true</prop>
				<prop key="hibernate.cache.use_query_cache">true</prop>
				<prop key="hibernate.cache.region.factory_class">net.sf.ehcache.hibernate.EhCacheRegionFactory</prop>
				<prop key="net.sf.ehcache.configurationResourceName">ehcache.xml</prop>
				<prop key="hibernate.show_sql">${hibernate.journal.show_sql}</prop>
				<prop key="hibernate.format_sql">${hibernate.journal.format_sql}</prop>
				<prop key="hibernate.use_sql_comments">${hibernate.journal.use_sql_comments}</prop>
                <prop key="hibernate.generate_statistics">false</prop>
				<prop key="hibernate.connection.shutdown">true</prop>
				<prop key="hibernate.validator.autoregister_listeners">false</prop>
				<prop key="hibernate.validator.apply_to_ddl">false</prop>
				<prop key="javax.persistence.validation.mode">NONE</prop>
			</props>
		</constructor-arg>
		<constructor-arg ref="hbmResourcesConfigurationProvider" />
        <constructor-arg name="cacheQueries">
            <map>
                <entry key="getDirectProfileMembersOfGroup" value="true"/>
                <entry key="getDirectProfileMembersOfRole" value="true"/>
                <entry key="getDirectProfileMembersOfUser" value="true"/>
                <entry key="getEntriesOfProfile" value="true"/>
                <entry key="getEntriesOfProfileByParentId" value="true"/>
                <entry key="getNumberOfEntriesOfProfile" value="true"/>
                <entry key="getNumberOfProfile" value="true"/>
                <entry key="getNumberOfProfileMemberOfProfile" value="true"/>
                <entry key="getNumberOfSProfileMemberForGroup" value="true"/>
                <entry key="getNumberOfSProfileMemberForRole" value="true"/>
                <entry key="getNumberOfSProfileMemberForRoleAndGroup" value="true"/>
                <entry key="getNumberOfSProfileMemberForUser" value="true"/>
                <entry key="getNumberOfSProfileMemberwithSGroupForGroup" value="true"/>
                <entry key="getNumberOfSProfileMemberwithSGroupForRoleAndGroup" value="true"/>
                <entry key="getNumberOfSProfileMemberwithSGroupwithSRoleForRoleAndGroup" value="true"/>
                <entry key="getNumberOfSProfileMemberwithSRoleForRole" value="true"/>
                <entry key="getNumberOfSProfileMemberwithSRoleForRoleAndGroup" value="true"/>
                <entry key="getNumberOfSProfileMemberwithSUserForUser" value="true"/>
                <entry key="getProfileByName" value="true"/>
                <entry key="getProfileMemberWithoutDisplayNameById" value="true"/>
                <entry key="getProfileMembersFromProfileIds" value="true"/>
                <entry key="getProfiles" value="true"/>
                <entry key="getProfilesOfUser" value="true"/>
                <entry key="getSProfileMembersWithoutDisplayName" value="true"/>
                <entry key="searchSProfileMemberForGroup" value="true"/>
                <entry key="searchSProfileMemberForRole" value="true"/>
                <entry key="searchSProfileMemberForRoleAndGroup" value="true"/>
                <entry key="searchSProfileMemberForUser" value="true"/>
                <entry key="searchSProfileMemberwithSGroupForGroup" value="true"/>
                <entry key="searchSProfileMemberwithSGroupForRoleAndGroup" value="true"/>
                <entry key="searchSProfileMemberwithSGroupwithSRoleForRoleAndGroup" value="true"/>
                <entry key="searchSProfileMemberwithSRoleForRole" value="true"/>
                <entry key="searchSProfileMemberwithSRoleForRoleAndGroup" value="true"/>
                <entry key="searchSProfileMemberwithSUserForUser" value="true"/>
                <entry key="getCategories" value="true"/>
                <entry key="getCategoriesOfProcess" value="true"/>
                <entry key="getCategorizedProcessIds" value="true"/>
                <entry key="getCategoryByName" value="true"/>
                <entry key="getNumberOfCategoriesOfProcess" value="true"/>
                <entry key="getNumberOfCategorizedProcessIds" value="true"/>
                <entry key="getNumberOfCategory" value="true"/>
                <entry key="getProcessCategoryMappingsOfCategory" value="true"/>
                <entry key="getProcessCategoryMappingsOfProcess" value="true"/>
                <entry key="getProcessIdsOfCategory" value="true"/>
                <entry key="getActorFromNameAndScopeId" value="true"/>
                <entry key="getActorMembersOfActor" value="true"/>
                <entry key="getActorMembersOfGroup" value="true"/>
                <entry key="getActorMembersOfRole" value="true"/>
                <entry key="getActorMembersOfUser" value="true"/>
                <entry key="getActorPrivilegeByActorAndPrivilegeId" value="true"/>
                <entry key="getActorPrivileges" value="true"/>
                <entry key="getActorPrivilegesByActorId" value="true"/>
                <entry key="getActorPrivilegesByIds" value="true"/>
                <entry key="getActorsByIds" value="true"/>
                <entry key="getActorsOfScope" value="true"/>
                <entry key="getActorsOfScopes" value="true"/>
                <entry key="getActorsOfUser" value="true"/>
                <entry key="getActorsOfUserCanStartProcessDefinition" value="true"/>
                <entry key="getNumberOfActorMembersOfActor" value="true"/>
                <entry key="getNumberOfSActorPrivilege" value="true"/>
                <entry key="searchSActorPrivilege" value="true"/>
                <entry key="getDataInstanceByIds" value="true"/>
                <entry key="getDataInstanceIdFromMapping" value="true"/>
                <entry key="getDataInstanceIdsFromMapping" value="true"/>
                <entry key="getDataInstanceVisibilityMappings" value="true"/>
                <entry key="getDataInstancesByContainer" value="true"/>
                <entry key="getDataInstancesByNameAndContainer" value="true"/>
                <entry key="getDataSourceByNameAndVersion" value="true"/>
                <entry key="getDataSourceParameterByNameAndDataSourceId" value="true"/>
                <entry key="getDataSourceParametersByDataSourceId" value="true"/>
                <entry key="getDataSources" value="true"/>
                <entry key="getLastSADataInstanceByDataInstanceId" value="true"/>
                <entry key="getNumberOfDataInstancesForContainer" value="true"/>
                <entry key="getSADataInstanceByDataInstanceId" value="true"/>
                <entry key="getSADataInstanceByDataInstanceIdAndArchiveDate" value="true"/>
                <entry key="getSADataInstanceIdFromMapping" value="true"/>
                <entry key="getSADataInstanceIdsFromMapping" value="true"/>
                <entry key="getSADataInstanceVisibilityMappings" value="true"/>
                <entry key="getSADataInstancesByDataInstanceIdAndArchiveDate" value="true"/>
				<entry key="getPlatform" value="true" />
				<entry key="getDeployInfoByProcessDefId" value="true" />
				<entry key="getCommandByName" value="true" />
            </map>
        </constructor-arg>
        <constructor-arg name="classesWithLoadByQuery">
            <list>
                <value>org.bonitasoft.engine.identity.model.SUserMembership</value>
            </list>
        </constructor-arg>
	</bean>

	<bean id="hbmResourcesConfigurationProvider" class="com.bonitasoft.engine.persistence.HibernateResourcesConfigurationProviderExt">
		<property name="hbmResources">
			<list>
				<ref bean="hbm-bonita-persistence-hibernate" />
				<ref bean="hbm-bonita-persistence-test" />
				<ref bean="hbm-bonita-log-model" />
				<ref bean="hbm-bonita-platform-model" />
				<ref bean="hbm-bonita-data-model" />
				<ref bean="hbm-bonita-dependency-model" />
				<ref bean="hbm-bonita-dependency-platform-model" />
				<ref bean="hbm-bonita-identity-model" />
				<ref bean="hbm-bonita-scheduler" />
				<ref bean="hbm-bonita-document-model" />
				<ref bean="hbm-bos-command-model" />
				<ref bean="hbm-bos-data-instance-model" />
				<ref bean="hbm-bos-data-instance-model-arch" />
				<ref bean="hbm-bos-platform-command-model" />
				<ref bean="hbm-bos-privilege-model" />
				<ref bean="hbm-bos-profile-model" />
				<ref bean="hbm-bonita-archive-test" />
			</list>
		</property>
		<constructor-arg name="cacheConcurrencyStrategies">
			<map />
		</constructor-arg>
	</bean>

</beans>