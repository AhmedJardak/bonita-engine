<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.0.xsd">

	<!-- We create the Quartz tables during the setup. This is not very clean but I do not want this to appear in the cfg-bonita-scheduler-quartz file
	In order to keep the configuration files as close as possible with the ones present in the bonita-home. -->
	<bean id="quartzDbInitializer" class="org.springframework.jdbc.datasource.init.DataSourceInitializer">
		<property name="dataSource">
			<ref bean="bonitaDataSource" />
		</property>
		<property name="enabled" value="true" />
		<property name="databasePopulator">
			<bean class="org.springframework.jdbc.datasource.init.ResourceDatabasePopulator">
				<property name="continueOnError" value="false" />
				<property name="ignoreFailedDrops" value="true" />
				<property name="sqlScriptEncoding" value="UTF-8" />
				<property name="scripts">
					<array>
						<value type="org.springframework.core.io.Resource">classpath:org/bonitasoft/engine/scheduler/${bonita.test.db.vendor:h2}-dropQuartzTables.sql</value>
						<value type="org.springframework.core.io.Resource">classpath:org/bonitasoft/engine/scheduler/${bonita.test.db.vendor:h2}-createQuartzTables.sql</value>
					</array>
				</property>
			</bean>
		</property>
	</bean>
	
	<!-- Set up the mapping jndiName -> Datasource -->
	<util:map id="jndiMapping">
		<entry key="java:comp/env/bonitaDS" value-ref="bonitaDataSource" />
		<entry key="java:comp/env/bonitaSequenceManagerDS" value-ref="bonitaSequenceManagerDataSource" />
	</util:map>

	<!-- This is the base class that will allow to lookup the JNDI tree -->
	<bean id="jndiTemplate" class="org.springframework.jndi.JndiTemplate" />

	<!-- Bind the mapping into Carol -->
	<bean id="jndiSetup" class="org.bonitasoft.engine.local.MemoryJNDISetup" scope="singleton" init-method="init" destroy-method="clean">
		<constructor-arg name="jndiTemplate" ref="jndiTemplate" />
		<constructor-arg name="jndiMapping" ref="jndiMapping" />
	</bean>

</beans>
